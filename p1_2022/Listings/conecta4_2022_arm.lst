


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************
    2 00000000         ; Autores: Ayelen Nu�o con NIA 799301 y Loreto Matiner
                       o con NIA 796598
    3 00000000         ;*******************************************************
                       ************
    4 00000000                 AREA             datos, DATA, READWRITE
    5 00000000 00 FF FF 
              01       deltas_fila
                               DCB              0x00, 0xFF, 0xFF, 0x01
    6 00000004 FF 00 FF 
              FF       deltas_columna
                               DCB              0xFF, 0x00, 0xFF, 0xFF
    7 00000008         
    8 00000008                 AREA             codigo, CODE
    9 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
   10 00000000                 EXPORT           conecta4_hay_linea_arm_c
   11 00000000                 IMPORT           conecta4_buscar_alineamiento_c
   12 00000000                 PRESERVE8        {TRUE}
   13 00000000                 ENTRY
   14 00000000         
   15 00000000         ; Parámetros que nos pasan a la función 
   16 00000000         ; r0 = tablero  
   17 00000000         ; r1 = fila 
   18 00000000         ; r2 = columna 
   19 00000000         ; r3 = color 
   20 00000000         conecta4_hay_linea_arm_arm
   21 00000000 E92D5FF0        STMDB            R13!, {R4-R12, R14}
   22 00000004 E3A04000        mov              r4, #0      ; contador i del bu
                                                            cle for 
   23 00000008 E59F723C        LDR              r7, =deltas_fila ; r7 = @deltas
                                                            _fila 
   24 0000000C         for
   25 0000000C E3A08000        mov              r8, #0      ;contador resultado
                                                             para alineamiento 
                                                            
   26 00000010         ; funcion alineamiento
   27 00000010         buc                                  ; actualizamos los 
                                                            deltas 
   28 00000010 E1D760D0        ldrsb            r6, [r7]    ; r4 = valor deltas
                                                            _fila
   29 00000014 E1D750D4        ldrsb            r5, [r7, #4] ; r5 = valor delta
                                                            s_columna; r8 = r8 
                                                            +1
   30 00000018         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   31 00000018         ; estan dentro del tablero 
   32 00000018 E3510001        cmp              r1, #1
   33 0000001C BA000010        blt              termina     ; salta si r1 < 1 
   34 00000020 E3510006        cmp              r1, #6
   35 00000024 CA00000E        bgt              termina     ; salta si r5 > NUM
                                                            _FILAS
   36 00000028 E3520001        cmp              r2, #1
   37 0000002C BA00000C        blt              termina     ; salta si r6 < 1 
   38 00000030 E3520007        cmp              r2, #7
   39 00000034 CA00000A        bgt              termina     ; salta si r6 > NUM
                                                            _COLUMNAS 
   40 00000038         ; comprobamos que la celda no sea vacia, y sea del mismo



ARM Macro Assembler    Page 2 


                        color 
   41 00000038 E080A181        add              r10, r0, r1, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
   42 0000003C E7DA9002        ldrb             r9, [r10, r2] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
   43 00000040 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
   44 00000044 0A000006        beq              termina     ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
   45 00000048 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
   46 0000004C E15A0003        cmp              r10, r3     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
   47 00000050 1A000003        bne              termina
   48 00000054 E0816006        add              r6, r1, r6  ; nueva_fila = fila
                                                             + delta_fila
   49 00000058 E0825005        add              r5, r2, r5  ; nueva_columna = c
                                                            olumna + delta_colu
                                                            mna
   50 0000005C E2888001        add              r8, r8, #1  ; incremento result
                                                            ado
   51 00000060 EAFFFFEA        b                buc
   52 00000064         termina
   53 00000064 E3580004        cmp              r8, #4      ; salta si r4 >= 4 
                                                            
   54 00000068 AA000023        bge              continua
   55 0000006C         buc1
   56 0000006C         ; preparamos los parametros para la siguiente invocació
                       n  
   57 0000006C E1D760D0        ldrsb            r6, [r7]    ; r4 = valor deltas
                                                            _fila
   58 00000070 E1D750D4        ldrsb            r5, [r7, #4] ; r5 = valor delta
                                                            s_columna; r8 = r8 
                                                            +1 
   59 00000074 E3E0B000        mov              r11, #-1    ; r12 = -1 para act
                                                            ualizar los deltas
   60 00000078 E006069B        mul              r6, r11, r6 ; delta_fila
   61 0000007C E005059B        mul              r5, r11, r5 ; delta_columna
   62 00000080 E1A0B001        mov              r11, r1
   63 00000084 E1A0C002        mov              r12, r2
   64 00000088 E0411006        sub              r1, r1, r6  ; fila - delta_fila
                                                            
   65 0000008C E0422005        sub              r2, r2, r5  ; columna - delta_c
                                                            olumna
   66 00000090         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   67 00000090         ; estan dentro del tablero 
   68 00000090 E3510001        cmp              r1, #1
   69 00000094 BAFFFFF2        blt              termina     ; salta si r1 < 1 
   70 00000098 E3510006        cmp              r1, #6
   71 0000009C CAFFFFF0        bgt              termina     ; salta si r5 > NUM
                                                            _FILAS
   72 000000A0 E3520001        cmp              r2, #1
   73 000000A4 BAFFFFEE        blt              termina     ; salta si r6 < 1 



ARM Macro Assembler    Page 3 


   74 000000A8 E3520007        cmp              r2, #7
   75 000000AC CAFFFFEC        bgt              termina     ; salta si r6 > NUM
                                                            _COLUMNAS 
   76 000000B0         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
   77 000000B0 E080A181        add              r10, r0, r1, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
   78 000000B4 E7DA9002        ldrb             r9, [r10, r2] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
   79 000000B8 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
   80 000000BC 0AFFFFE8        beq              termina     ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
   81 000000C0 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
   82 000000C4 E15A0003        cmp              r10, r3     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
   83 000000C8 1AFFFFE5        bne              termina
   84 000000CC E0816006        add              r6, r1, r6  ; nueva_fila = fila
                                                             + delta_fila
   85 000000D0 E0825005        add              r5, r2, r5  ; nueva_columna = c
                                                            olumna + delta_colu
                                                            mna
   86 000000D4 E2888001        add              r8, r8, #1  ; incremento result
                                                            ado
   87 000000D8 EAFFFFE3        b                buc1
   88 000000DC E2877001        add              r7, r7, #1  ; r7 = r7 +1
   89 000000E0 E1A0100B        mov              r1, r11
   90 000000E4 E1A0200C        mov              r2, r12
   91 000000E8 E3580004        cmp              r8, #4      ; salta si r4 >= 4 
                                                            
   92 000000EC AA000002        bge              continua
   93 000000F0 E2844001        add              r4, r4, #1  ; incrementamos con
                                                            tador 
   94 000000F4 E3540004        cmp              r4, #4      ; salta si r4 < 4 
   95 000000F8 BAFFFFC3        blt              for
   96 000000FC         ; salimos del bucle y terminamos la subrutina  
   97 000000FC         continua
   98 000000FC E3580004        cmp              r8, #4      ; Guardamos el resu
                                                            ltado en r0 para de
                                                            volverlo 
   99 00000100 A3A00001        movge            r0, #1
  100 00000104 B3A00000        movlt            r0, #0
  101 00000108 E8BD9FF0        LDMIA            R13!, {R4-R12,PC}
  102 0000010C         
  103 0000010C         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ----------------------
  104 0000010C         ; Parámetros que nos pasan a la función 
  105 0000010C         ; r0 = tablero  
  106 0000010C         ; r1 = fila 
  107 0000010C         ; r2 = columna 
  108 0000010C         ; r3 = color 
  109 0000010C         



ARM Macro Assembler    Page 4 


  110 0000010C         conecta4_hay_linea_arm_c
  111 0000010C         
  112 0000010C E92D5FF0        STMDB            R13!, {R4-R12, R14}
  113 00000110 E3A04000        mov              r4, #0      ; contador i del bu
                                                            cle for 
  114 00000114 E1A06000        mov              r6, r0      ; valor auxiliar de
                                                            l tablero
  115 00000118 E1A05001        mov              r5, r1      ; r5 = valor de la 
                                                            fila
  116 0000011C E1A08002        mov              r8, r2      ; r8 = valor de la 
                                                            columna 
  117 00000120 E1A0C003        mov              r12, r3     ; r12 = color
  118 00000124 E59F7120        LDR              r7, =deltas_fila 
                                                            ; r7 = @deltas_fila
                                                            
  119 00000128         
  120 00000128         for1
  121 00000128         ; actualizamos los deltas 
  122 00000128 E1D790D0        ldrsb            r9, [r7]    ; r9 = valor deltas
                                                            _fila
  123 0000012C E1D7A0D4        ldrsb            r10, [r7, #4] ; r10 = valor del
                                                            tas_columna; r8 = r
                                                            8 +1
  124 00000130 E2877001        add              r7, r7, #1  ; r7 = r7 +1
  125 00000134 E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
  126 00000138         ; invocamos a la función para buscar en un sentido 
  127 00000138 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
  128 0000013C E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
  129 00000140 E3500004        cmp              r0, #4      ; salta si r4 >= 4 
                                                            
  130 00000144 AA000016        bge              continua1
  131 00000148         ; preparamos los parametros para la siguiente invocació
                       n 
  132 00000148 E3E0B000        mov              r11, #-1    ; r12 = -1 para act
                                                            ualizar los deltas
  133 0000014C E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
  134 00000150 E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
  135 00000154 E0411009        sub              r1, r1, r9  ; fila = fila - del
                                                            ta_fila 
  136 00000158 E042200A        sub              r2, r2, r10 ; columna = columna
                                                             - delta_columna 
  137 0000015C E009099B        mul              r9, r11, r9
  138 00000160 E00A0A9B        mul              r10, r11, r10
  139 00000164         ; devolvemos los parámetros a sus registros correspondi
                       entes
  140 00000164 E1A0B000        mov              r11, r0     ; resultado tempora
                                                            l en r11 
  141 00000168 E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
  142 0000016C E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
  143 00000170 E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
  144 00000174 EBFFFFFE        bl               conecta4_buscar_alineamiento_c



ARM Macro Assembler    Page 5 


  145 00000178 E08BB000        add              r11, r11, r0 ; guardamos en r11
                                                             el valor del resul
                                                            tado actualizado
  146 0000017C E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
  147 00000180 E35B0004        cmp              r11, #4     ; salta si r4 >= 4 
                                                            
  148 00000184 AA000006        bge              continua1
  149 00000188         ; devolvemos a la normalidad los registros para la sigui
                       ente iteracion  
  150 00000188 E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
  151 0000018C E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
  152 00000190 E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
  153 00000194 E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
  154 00000198         ; comprobamos si volvemos a saltar al bucle 
  155 00000198 E2844001        add              r4, r4, #1  ; incrementamos con
                                                            tador 
  156 0000019C E3540004        cmp              r4, #4      ; salta si r4 < 4 
  157 000001A0 BAFFFFE0        blt              for1
  158 000001A4         ; salimos del bucle y terminamos la subrutina  
  159 000001A4         continua1
  160 000001A4 E35B0004        cmp              r11, #4     ; Guardamos el resu
                                                            ltado en r0 para de
                                                            volverlo 
  161 000001A8 A3A00001        movge            r0, #1
  162 000001AC B3A00000        movlt            r0, #0
  163 000001B0 E8BD9FF0        LDMIA            R13!, {R4-R12,PC}
  164 000001B4         
  165 000001B4         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ----------------------
  166 000001B4         ; Parámetros que nos pasan a la función 
  167 000001B4         ; r0 = tablero  
  168 000001B4         ; r1 = fila 
  169 000001B4         ; r2 = columna 
  170 000001B4         ; r3 = color 
  171 000001B4         
  172 000001B4         ; Faltan las deltas que se pasan siemPre a través de la
                        pila
  173 000001B4         ; delta de la columna es sp 
  174 000001B4         ; delta de la fila es fp +4 
  175 000001B4         
  176 000001B4         conecta4_buscar_alineamiento_arm
  177 000001B4 E92D47F0        STMDB            R13!, {R4-R10,R14}
  178 000001B8 E1A04000        mov              r4, r0      ; r4 = tablero 
  179 000001BC E1A05001        mov              r5, r1      ; r5 = fila
  180 000001C0 E1A06002        mov              r6, r2      ; r6 = columna 
  181 000001C4 E1A07003        mov              r7, r3      ; r7 = color
  182 000001C8         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
  183 000001C8         ; estan dentro del tablero 
  184 000001C8 E3550001        cmp              r5, #1
  185 000001CC B3A00000        movlt            r0, #0
  186 000001D0 BA00001C        blt              termina1    ; salta si r5 < 1 



ARM Macro Assembler    Page 6 


  187 000001D4 E3550006        cmp              r5, #6
  188 000001D8 C3A00000        movgt            r0, #0
  189 000001DC CA000019        bgt              termina1    ; salta si r5 > NUM
                                                            _FILAS
  190 000001E0 E3560001        cmp              r6, #1
  191 000001E4 B3A00000        movlt            r0, #0
  192 000001E8 BA000016        blt              termina1    ; salta si r6 < 1 
  193 000001EC E3560007        cmp              r6, #7
  194 000001F0 C3A00000        movgt            r0, #0
  195 000001F4 CA000013        bgt              termina1    ; salta si r6 > NUM
                                                            _COLUMNAS 
  196 000001F8         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
  197 000001F8 E084A185        add              r10, r4, r5, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
  198 000001FC E7DA9006        ldrb             r9, [r10, r6] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
  199 00000200 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
  200 00000204 03A00000        moveq            r0, #0
  201 00000208 0A00000E        beq              termina1    ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
  202 0000020C E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
  203 00000210 E15A0007        cmp              r10, r7     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
  204 00000214 13A00000        movne            r0, #0
  205 00000218 1A00000A        bne              termina1    ; salta si no son i
                                                            guales
  206 0000021C         ; obtenemos el valor de delta y lo avanzamos 
  207 0000021C E59D9020        ldr              r9, [sp, #32] ; r9 = deltaFila 
                                                            = sp + 12
  208 00000220 E0851009        add              r1, r5, r9  ; r5 = nueva_fila =
                                                             fila + delta_fila
  209 00000224 E59DA024        ldr              r10, [sp, #36] ; r10 = deltaCol
                                                            umna = sp + 8
  210 00000228 E086200A        add              r2, r6, r10 ; r6 = nueva_column
                                                            a = columna + delta
                                                            _columna
  211 0000022C         ;llamamos a la función recursiva
  212 0000022C E3A08001        mov              r8, #1      ; apilamos en resul
                                                            tado un 1
  213 00000230 E92D0100        STMDB            R13!, {r8}
  214 00000234 E92D0600        STMDB            R13!, {r9, r10} ; apilamos los 
                                                            parámetros y el re
                                                            sultado para la sig
                                                            uiente iteración 
  215 00000238 EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
  216 0000023C E59D1008        ldr              r1, [sp, #8] ; leemos resultado
                                                             (1)
  217 00000240 E0800001        add              r0, r0, r1  ; r0 = resultado fi
                                                            nal = resultado ant
                                                            erior (r0) + result



ARM Macro Assembler    Page 7 


                                                            ado de esta invocac
                                                            ion de la subrutina
                                                            (r1)
  218 00000244 E28DD00C        add              sp, sp, #12 ; liberamo el esaci
                                                            o de los parámetro
                                                            s apilados 
  219 00000248         termina1                             ; salimos de la sub
                                                            rutina 
  220 00000248 E8BD87F0        LDMIA            R13!, {R4-R10, PC}
  221 0000024C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec
ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 4 in file conecta4_2022_arm.s
   Uses
      None
Comment: datos unused
deltas_columna 00000004

Symbol: deltas_columna
   Definitions
      At line 6 in file conecta4_2022_arm.s
   Uses
      None
Comment: deltas_columna unused
deltas_fila 00000000

Symbol: deltas_fila
   Definitions
      At line 5 in file conecta4_2022_arm.s
   Uses
      At line 23 in file conecta4_2022_arm.s
      At line 118 in file conecta4_2022_arm.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buc 00000010

Symbol: buc
   Definitions
      At line 27 in file conecta4_2022_arm.s
   Uses
      At line 51 in file conecta4_2022_arm.s
Comment: buc used once
buc1 0000006C

Symbol: buc1
   Definitions
      At line 55 in file conecta4_2022_arm.s
   Uses
      At line 87 in file conecta4_2022_arm.s
Comment: buc1 used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 8 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 000001B4

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 176 in file conecta4_2022_arm.s
   Uses
      At line 9 in file conecta4_2022_arm.s
      At line 215 in file conecta4_2022_arm.s

conecta4_hay_linea_arm_arm 00000000

Symbol: conecta4_hay_linea_arm_arm
   Definitions
      At line 20 in file conecta4_2022_arm.s
   Uses
      None
Comment: conecta4_hay_linea_arm_arm unused
conecta4_hay_linea_arm_c 0000010C

Symbol: conecta4_hay_linea_arm_c
   Definitions
      At line 110 in file conecta4_2022_arm.s
   Uses
      At line 10 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_c used once
continua 000000FC

Symbol: continua
   Definitions
      At line 97 in file conecta4_2022_arm.s
   Uses
      At line 54 in file conecta4_2022_arm.s
      At line 92 in file conecta4_2022_arm.s

continua1 000001A4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: continua1
   Definitions
      At line 159 in file conecta4_2022_arm.s
   Uses
      At line 130 in file conecta4_2022_arm.s
      At line 148 in file conecta4_2022_arm.s

for 0000000C

Symbol: for
   Definitions
      At line 24 in file conecta4_2022_arm.s
   Uses
      At line 95 in file conecta4_2022_arm.s
Comment: for used once
for1 00000128

Symbol: for1
   Definitions
      At line 120 in file conecta4_2022_arm.s
   Uses
      At line 157 in file conecta4_2022_arm.s
Comment: for1 used once
termina 00000064

Symbol: termina
   Definitions
      At line 52 in file conecta4_2022_arm.s
   Uses
      At line 33 in file conecta4_2022_arm.s
      At line 35 in file conecta4_2022_arm.s
      At line 37 in file conecta4_2022_arm.s
      At line 39 in file conecta4_2022_arm.s
      At line 44 in file conecta4_2022_arm.s
      At line 47 in file conecta4_2022_arm.s
      At line 69 in file conecta4_2022_arm.s
      At line 71 in file conecta4_2022_arm.s
      At line 73 in file conecta4_2022_arm.s
      At line 75 in file conecta4_2022_arm.s
      At line 80 in file conecta4_2022_arm.s
      At line 83 in file conecta4_2022_arm.s

termina1 00000248

Symbol: termina1
   Definitions
      At line 219 in file conecta4_2022_arm.s
   Uses
      At line 186 in file conecta4_2022_arm.s
      At line 189 in file conecta4_2022_arm.s
      At line 192 in file conecta4_2022_arm.s
      At line 195 in file conecta4_2022_arm.s
      At line 201 in file conecta4_2022_arm.s
      At line 205 in file conecta4_2022_arm.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

conecta4_buscar_alineamiento_c 00000000

Symbol: conecta4_buscar_alineamiento_c
   Definitions
      At line 11 in file conecta4_2022_arm.s
   Uses
      At line 127 in file conecta4_2022_arm.s
      At line 144 in file conecta4_2022_arm.s

1 symbol
350 symbols in table
