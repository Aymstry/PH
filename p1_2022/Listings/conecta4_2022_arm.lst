


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************
    2 00000000         ; Autores: Ayelen Nu�o con NIA 799301 y Loreto Matiner
                       o con NIA 796598
    3 00000000         ;*******************************************************
                       ************
    4 00000000                 AREA             datos, DATA, READWRITE
    5 00000000 00 FF FF 
              01       deltas_fila
                               DCB              0x00, 0xFF, 0xFF, 0x01
    6 00000004 FF 00 FF 
              FF       deltas_columna
                               DCB              0xFF, 0x00, 0xFF, 0xFF
    7 00000008         
    8 00000008                 AREA             codigo, CODE
    9 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
   10 00000000                 EXPORT           conecta4_hay_linea_arm_c
   11 00000000                 EXPORT           conecta4_hay_linea_arm_arm
   12 00000000                 IMPORT           conecta4_buscar_alineamiento_c
   13 00000000                 PRESERVE8        {TRUE}
   14 00000000                 ENTRY
   15 00000000         
   16 00000000         ; Parámetros y funciones asignadas a los mismos 
   17 00000000         ; r0 = @tablero 
   18 00000000         ; r1 = fila 
   19 00000000         ; r2 = columna 
   20 00000000         ; r3 = color 
   21 00000000         ; r4 = contador del bucle exterior (el for en c)
   22 00000000         ; r5 = delta_columna 
   23 00000000         ; r6 = delta_fila 
   24 00000000         ; r7 = @deltas 
   25 00000000         ; r8 = resultado temporal 
   26 00000000         ; r9  y r10 = se utilizan para calcular la @ de la celda
                        
   27 00000000         ; r11 = copia de fila 
   28 00000000         ; r12 = copia de columna 
   29 00000000         
   30 00000000         ; Función que comprueba que hay 4 fichas iguales en lí
                       nea.
   31 00000000         ; Devolverá 1 en r0 si se ha hecho un 4 en ralla, en ca
                       so contrario devolverá 0.
   32 00000000         
   33 00000000         conecta4_hay_linea_arm_arm
   34 00000000 E92D5FF0        STMDB            R13!, {R4-R12, R14}
   35 00000004 E3A04000        mov              r4, #0      ; contador i del bu
                                                            cle for 
   36 00000008 E59F7248        LDR              r7, =deltas_fila ; r7 = @deltas
                                                            _fila 
   37 0000000C         for
   38 0000000C E3A08000        mov              r8, #0      ;contador resultado
                                                             para alineamiento 
                                                            
   39 00000010         ; funcion alineamiento
   40 00000010         ; actualizamos los deltas 
   41 00000010 E1D760D0        ldrsb            r6, [r7]    ; r4 = valor deltas
                                                            _fila
   42 00000014 E1D750D4        ldrsb            r5, [r7, #4] ; r5 = valor delta
                                                            s_columna; r8 = r8 



ARM Macro Assembler    Page 2 


                                                            +1
   43 00000018         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   44 00000018         ; estan dentro del tablero 
   45 00000018 E1A0B001        mov              r11, r1
   46 0000001C E1A0C002        mov              r12, r2
   47 00000020 E3510001 
                       buc     cmp              r1, #1
   48 00000024 BA000010        blt              termina     ; salta si r1 < 1 
   49 00000028 E3510006        cmp              r1, #6
   50 0000002C CA00000E        bgt              termina     ; salta si r5 > NUM
                                                            _FILAS
   51 00000030 E3520001        cmp              r2, #1
   52 00000034 BA00000C        blt              termina     ; salta si r6 < 1 
   53 00000038 E3520007        cmp              r2, #7
   54 0000003C CA00000A        bgt              termina     ; salta si r6 > NUM
                                                            _COLUMNAS 
   55 00000040         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
   56 00000040 E080A181        add              r10, r0, r1, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
   57 00000044 E7DA9002        ldrb             r9, [r10, r2] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
   58 00000048 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
   59 0000004C 0A000006        beq              termina     ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
   60 00000050 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
   61 00000054 E15A0003        cmp              r10, r3     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
   62 00000058 1A000003        bne              termina
   63 0000005C E0811006        add              r1, r1, r6  ; nueva_fila = fila
                                                             + delta_fila
   64 00000060 E0822005        add              r2, r2, r5  ; nueva_columna = c
                                                            olumna + delta_colu
                                                            mna
   65 00000064 E2888001        add              r8, r8, #1  ; incremento result
                                                            ado
   66 00000068 EAFFFFEC        b                buc
   67 0000006C         termina
   68 0000006C E3580004        cmp              r8, #4      ; salta si r4 >= 4 
                                                            
   69 00000070 AA000023        bge              continua
   70 00000074 E1A0100B        mov              r1, r11
   71 00000078 E1A0200C        mov              r2, r12
   72 0000007C         ; preparamos los parametros para la siguiente invocació
                       n  
   73 0000007C E1D760D0        ldrsb            r6, [r7]    ; r4 = valor deltas
                                                            _fila
   74 00000080 E1D750D4        ldrsb            r5, [r7, #4] ; r5 = valor delta
                                                            s_columna; r8 = r8 
                                                            +1 
   75 00000084         



ARM Macro Assembler    Page 3 


   76 00000084 E3E0A000        mov              r10, #-1    ; r10 = -1 para act
                                                            ualizar los deltas
   77 00000088 E0411006        sub              r1, r1, r6  ; fila - delta_fila
                                                            
   78 0000008C E0422005        sub              r2, r2, r5  ; columna - delta_c
                                                            olumna
   79 00000090 E006069A        mul              r6, r10, r6 ; delta_fila
   80 00000094 E005059A        mul              r5, r10, r5 ; delta_columna
   81 00000098         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   82 00000098         ; estan dentro del tablero 
   83 00000098         buc1
   84 00000098 E3510001        cmp              r1, #1
   85 0000009C BA000010        blt              term        ; salta si r1 < 1 
   86 000000A0 E3510006        cmp              r1, #6
   87 000000A4 CA00000E        bgt              term        ; salta si r5 > NUM
                                                            _FILAS
   88 000000A8 E3520001        cmp              r2, #1
   89 000000AC BA00000C        blt              term        ; salta si r6 < 1 
   90 000000B0 E3520007        cmp              r2, #7
   91 000000B4 CA00000A        bgt              term        ; salta si r6 > NUM
                                                            _COLUMNAS 
   92 000000B8         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
   93 000000B8 E080A181        add              r10, r0, r1, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
   94 000000BC E7DA9002        ldrb             r9, [r10, r2] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
   95 000000C0 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
   96 000000C4 0A000006        beq              term        ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
   97 000000C8 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
   98 000000CC E15A0003        cmp              r10, r3     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
   99 000000D0 1A000003        bne              term
  100 000000D4 E0811006        add              r1, r1, r6  ; nueva_fila = fila
                                                             + delta_fila
  101 000000D8 E0822005        add              r2, r2, r5  ; nueva_columna = c
                                                            olumna + delta_colu
                                                            mna
  102 000000DC E2888001        add              r8, r8, #1  ; incremento result
                                                            ado
  103 000000E0 EAFFFFEC        b                buc1
  104 000000E4         term
  105 000000E4 E3580004        cmp              r8, #4      ; salta si r4 >= 4 
                                                            
  106 000000E8 AA000005        bge              continua
  107 000000EC E2877001        add              r7, r7, #1  ; r7 = r7 +1
  108 000000F0 E2844001        add              r4, r4, #1  ; incrementamos con
                                                            tador 
  109 000000F4 E3540004        cmp              r4, #4      ; salta si r4 < 4 
  110 000000F8 E1A0100B        mov              r1, r11



ARM Macro Assembler    Page 4 


  111 000000FC E1A0200C        mov              r2, r12
  112 00000100 BAFFFFC1        blt              for
  113 00000104         ; salimos del bucle y terminamos la subrutina  
  114 00000104         continua
  115 00000104 E3580004        cmp              r8, #4      ; Guardamos el resu
                                                            ltado en r0 para de
                                                            volverlo 
  116 00000108 A3A00001        movge            r0, #1
  117 0000010C B3A00000        movlt            r0, #0
  118 00000110 E8BD9FF0        LDMIA            R13!, {R4-R12,PC}
  119 00000114         
  120 00000114         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ----------------------
  121 00000114         ; Parámetros y funciones asignadas a los mismos 
  122 00000114         ; r0 = @tablero y resultados
  123 00000114         ; r1 = fila 
  124 00000114         ; r2 = columna 
  125 00000114         ; r3 = color 
  126 00000114         ; r4 = contador i para el bucle for 
  127 00000114         ; r9 = valor delta_fila 
  128 00000114         ; r10 = valor delta_columna 
  129 00000114         ; r11 = -1 (valor para actualizar los deltas), y resulta
                       dos temporales
  130 00000114         ; Estos cuatro registros actúan como variables auxiliar
                       es dado que su valor se modifica en las invocaciones a f
                       unción.
  131 00000114         ; r5 = fila 
  132 00000114         ; r6 = @tablero  
  133 00000114         ; r7 = @deltas 
  134 00000114         ; r8 = columna 
  135 00000114         
  136 00000114         ; Función que comprueba que hay 4 fichas iguales en lí
                       nea a partir del resultado obtenido en conecta4_buscar_a
                       lineamiento_c
  137 00000114         ; Devolverá 1 en r0 si se ha hecho un 4 en ralla, en ca
                       so contrario devolverá 0.
  138 00000114         
  139 00000114         conecta4_hay_linea_arm_c
  140 00000114         
  141 00000114 E92D5FF0        STMDB            R13!, {R4-R12, R14}
  142 00000118 E3A04000        mov              r4, #0      ; contador i del bu
                                                            cle for 
  143 0000011C E1A06000        mov              r6, r0      ; valor auxiliar de
                                                            l tablero
  144 00000120 E1A05001        mov              r5, r1      ; r5 = valor de la 
                                                            fila
  145 00000124 E1A08002        mov              r8, r2      ; r8 = valor de la 
                                                            columna 
  146 00000128 E1A0C003        mov              r12, r3     ; r12 = color
  147 0000012C E59F7124        LDR              r7, =deltas_fila 
                                                            ; r7 = @deltas_fila
                                                            
  148 00000130         
  149 00000130         for1
  150 00000130         ; actualizamos los deltas 
  151 00000130 E1D790D0        ldrsb            r9, [r7]    ; r9 = valor deltas
                                                            _fila
  152 00000134 E1D7A0D4        ldrsb            r10, [r7, #4] ; r10 = valor del



ARM Macro Assembler    Page 5 


                                                            tas_columna; r8 = r
                                                            8 +1
  153 00000138 E2877001        add              r7, r7, #1  ; r7 = r7 +1
  154 0000013C E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
  155 00000140         ; invocamos a la función para buscar en un sentido 
  156 00000140 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
  157 00000144 E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
  158 00000148 E3500004        cmp              r0, #4      ; salta si r4 >= 4 
                                                            
  159 0000014C A1A0B000        movge            r11, r0
  160 00000150 AA000016        bge              continua1
  161 00000154         ; preparamos los parametros para la siguiente invocació
                       n 
  162 00000154 E3E0B000        mov              r11, #-1    ; r12 = -1 para act
                                                            ualizar los deltas
  163 00000158 E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
  164 0000015C E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
  165 00000160 E0411009        sub              r1, r1, r9  ; fila = fila - del
                                                            ta_fila 
  166 00000164 E042200A        sub              r2, r2, r10 ; columna = columna
                                                             - delta_columna 
  167 00000168 E009099B        mul              r9, r11, r9
  168 0000016C E00A0A9B        mul              r10, r11, r10
  169 00000170         ; devolvemos los parámetros a sus registros correspondi
                       entes
  170 00000170 E1A0B000        mov              r11, r0     ; resultado tempora
                                                            l en r11 
  171 00000174 E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
  172 00000178 E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
  173 0000017C E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
  174 00000180 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
  175 00000184 E08BB000        add              r11, r11, r0 ; guardamos en r11
                                                             el valor del resul
                                                            tado actualizado
  176 00000188 E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
  177 0000018C E35B0004        cmp              r11, #4     ; salta si r4 >= 4 
                                                            
  178 00000190 AA000006        bge              continua1
  179 00000194         ; devolvemos a la normalidad los registros para la sigui
                       ente iteracion  
  180 00000194 E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
  181 00000198 E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
  182 0000019C E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
  183 000001A0 E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
  184 000001A4         ; comprobamos si volvemos a saltar al bucle 



ARM Macro Assembler    Page 6 


  185 000001A4 E2844001        add              r4, r4, #1  ; incrementamos con
                                                            tador 
  186 000001A8 E3540004        cmp              r4, #4      ; salta si r4 < 4 
  187 000001AC BAFFFFDF        blt              for1
  188 000001B0         ; salimos del bucle y terminamos la subrutina  
  189 000001B0         continua1
  190 000001B0 E35B0004        cmp              r11, #4     ; Guardamos el resu
                                                            ltado en r0 para de
                                                            volverlo 
  191 000001B4 A3A00001        movge            r0, #1
  192 000001B8 B3A00000        movlt            r0, #0
  193 000001BC E8BD9FF0        LDMIA            R13!, {R4-R12,PC}
  194 000001C0         
  195 000001C0         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ----------------------
  196 000001C0         ; Parámetros y funciones asignadas a los mismos 
  197 000001C0         ; r0 = r4 = @ de tablero y paso de resultados a la funci
                       ón invocadora
  198 000001C0         ; r1 = r5 =  fila
  199 000001C0         ; r2 = r6 = columna 
  200 000001C0         ; r3 = r7 = color de la ficha 
  201 000001C0         ; r8 = se utilizará para guardar el valor #1 para apila
                       rlo como resultado en caso de que sea necesario. 
  202 000001C0         ; r9 = deltaFila
  203 000001C0         ; r10 = deltaColumna
  204 000001C0         
  205 000001C0         ; Función que cuenta el número de fichas iguales en un
                       a misma linea dado un sentido.
  206 000001C0         ; Devolverá el número de fichas iguales en línea por 
                       r0.
  207 000001C0         
  208 000001C0         conecta4_buscar_alineamiento_arm
  209 000001C0 E92D47F0        STMDB            R13!, {R4-R10,R14}
  210 000001C4 E1A04000        mov              r4, r0      ; r4 = tablero 
  211 000001C8 E1A05001        mov              r5, r1      ; r5 = fila
  212 000001CC E1A06002        mov              r6, r2      ; r6 = columna 
  213 000001D0 E1A07003        mov              r7, r3      ; r7 = color
  214 000001D4         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
  215 000001D4         ; estan dentro del tablero 
  216 000001D4 E3550001        cmp              r5, #1
  217 000001D8 B3A00000        movlt            r0, #0
  218 000001DC BA00001C        blt              termina1    ; salta si r5 < 1 
  219 000001E0 E3550006        cmp              r5, #6
  220 000001E4 C3A00000        movgt            r0, #0
  221 000001E8 CA000019        bgt              termina1    ; salta si r5 > NUM
                                                            _FILAS
  222 000001EC E3560001        cmp              r6, #1
  223 000001F0 B3A00000        movlt            r0, #0
  224 000001F4 BA000016        blt              termina1    ; salta si r6 < 1 
  225 000001F8 E3560007        cmp              r6, #7
  226 000001FC C3A00000        movgt            r0, #0
  227 00000200 CA000013        bgt              termina1    ; salta si r6 > NUM
                                                            _COLUMNAS 
  228 00000204         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
  229 00000204 E084A185        add              r10, r4, r5, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 



ARM Macro Assembler    Page 7 


  230 00000208 E7DA9006        ldrb             r9, [r10, r6] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
  231 0000020C E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
  232 00000210 03A00000        moveq            r0, #0
  233 00000214 0A00000E        beq              termina1    ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
  234 00000218 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
  235 0000021C E15A0007        cmp              r10, r7     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
  236 00000220 13A00000        movne            r0, #0
  237 00000224 1A00000A        bne              termina1    ; salta si no son i
                                                            guales
  238 00000228         ; obtenemos el valor de delta y lo avanzamos 
  239 00000228 E59D9020        ldr              r9, [sp, #32] ; r9 = deltaFila 
                                                            = sp + 12
  240 0000022C E0851009        add              r1, r5, r9  ; r1 = nueva_fila =
                                                             fila + delta_fila
  241 00000230 E59DA024        ldr              r10, [sp, #36] ; r10 = deltaCol
                                                            umna = sp + 8
  242 00000234 E086200A        add              r2, r6, r10 ; r2 = nueva_column
                                                            a = columna + delta
                                                            _columna
  243 00000238         ;llamamos a la función recursiva
  244 00000238 E3A08001        mov              r8, #1      ; apilamos en resul
                                                            tado un 1
  245 0000023C E92D0100        STMDB            R13!, {r8}
  246 00000240 E92D0600        STMDB            R13!, {r9, r10} ; apilamos los 
                                                            parámetros y el re
                                                            sultado para la sig
                                                            uiente iteración 
  247 00000244 EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
  248 00000248 E59D1008        ldr              r1, [sp, #8] ; leemos resultado
                                                             (1)
  249 0000024C E0800001        add              r0, r0, r1  ; r0 = resultado fi
                                                            nal = resultado ant
                                                            erior (r0) + result
                                                            ado de esta invocac
                                                            ion de la subrutina
                                                            (r1)
  250 00000250 E28DD00C        add              sp, sp, #12 ; liberamo el esaci
                                                            o de los parámetro
                                                            s apilados 
  251 00000254         termina1                             ; salimos de la sub
                                                            rutina 
  252 00000254 E8BD87F0        LDMIA            R13!, {R4-R10, PC}
  253 00000258                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec



ARM Macro Assembler    Page 8 


ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 4 in file conecta4_2022_arm.s
   Uses
      None
Comment: datos unused
deltas_columna 00000004

Symbol: deltas_columna
   Definitions
      At line 6 in file conecta4_2022_arm.s
   Uses
      None
Comment: deltas_columna unused
deltas_fila 00000000

Symbol: deltas_fila
   Definitions
      At line 5 in file conecta4_2022_arm.s
   Uses
      At line 36 in file conecta4_2022_arm.s
      At line 147 in file conecta4_2022_arm.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buc 00000020

Symbol: buc
   Definitions
      At line 47 in file conecta4_2022_arm.s
   Uses
      At line 66 in file conecta4_2022_arm.s
Comment: buc used once
buc1 00000098

Symbol: buc1
   Definitions
      At line 83 in file conecta4_2022_arm.s
   Uses
      At line 103 in file conecta4_2022_arm.s
Comment: buc1 used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 8 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 000001C0

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 208 in file conecta4_2022_arm.s
   Uses
      At line 9 in file conecta4_2022_arm.s
      At line 247 in file conecta4_2022_arm.s

conecta4_hay_linea_arm_arm 00000000

Symbol: conecta4_hay_linea_arm_arm
   Definitions
      At line 33 in file conecta4_2022_arm.s
   Uses
      At line 11 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_arm used once
conecta4_hay_linea_arm_c 00000114

Symbol: conecta4_hay_linea_arm_c
   Definitions
      At line 139 in file conecta4_2022_arm.s
   Uses
      At line 10 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_c used once
continua 00000104

Symbol: continua
   Definitions
      At line 114 in file conecta4_2022_arm.s
   Uses
      At line 69 in file conecta4_2022_arm.s
      At line 106 in file conecta4_2022_arm.s

continua1 000001B0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: continua1
   Definitions
      At line 189 in file conecta4_2022_arm.s
   Uses
      At line 160 in file conecta4_2022_arm.s
      At line 178 in file conecta4_2022_arm.s

for 0000000C

Symbol: for
   Definitions
      At line 37 in file conecta4_2022_arm.s
   Uses
      At line 112 in file conecta4_2022_arm.s
Comment: for used once
for1 00000130

Symbol: for1
   Definitions
      At line 149 in file conecta4_2022_arm.s
   Uses
      At line 187 in file conecta4_2022_arm.s
Comment: for1 used once
term 000000E4

Symbol: term
   Definitions
      At line 104 in file conecta4_2022_arm.s
   Uses
      At line 85 in file conecta4_2022_arm.s
      At line 87 in file conecta4_2022_arm.s
      At line 89 in file conecta4_2022_arm.s
      At line 91 in file conecta4_2022_arm.s
      At line 96 in file conecta4_2022_arm.s
      At line 99 in file conecta4_2022_arm.s

termina 0000006C

Symbol: termina
   Definitions
      At line 67 in file conecta4_2022_arm.s
   Uses
      At line 48 in file conecta4_2022_arm.s
      At line 50 in file conecta4_2022_arm.s
      At line 52 in file conecta4_2022_arm.s
      At line 54 in file conecta4_2022_arm.s
      At line 59 in file conecta4_2022_arm.s
      At line 62 in file conecta4_2022_arm.s

termina1 00000254

Symbol: termina1
   Definitions
      At line 251 in file conecta4_2022_arm.s
   Uses
      At line 218 in file conecta4_2022_arm.s
      At line 221 in file conecta4_2022_arm.s
      At line 224 in file conecta4_2022_arm.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 227 in file conecta4_2022_arm.s
      At line 233 in file conecta4_2022_arm.s
      At line 237 in file conecta4_2022_arm.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

conecta4_buscar_alineamiento_c 00000000

Symbol: conecta4_buscar_alineamiento_c
   Definitions
      At line 12 in file conecta4_2022_arm.s
   Uses
      At line 156 in file conecta4_2022_arm.s
      At line 174 in file conecta4_2022_arm.s

1 symbol
351 symbols in table
