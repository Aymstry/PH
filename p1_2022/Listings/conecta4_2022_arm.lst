


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************
    2 00000000         ; Autores: Ayelen Nu�o con NIA 799301 y Loreto Matiner
                       o con NIA 796598
    3 00000000         ;*******************************************************
                       ************
    4 00000000         
    5 00000000         ; Parámetros que nos pasan a la función 
    6 00000000         ; r0 = tablero  
    7 00000000         ; r1 = fila 
    8 00000000         ; r2 = columna 
    9 00000000         ; r3 = color 
   10 00000000         
   11 00000000         ; Faltan las deltas que se pasan siemre a través de la 
                       pila
   12 00000000         ; delta de la columna es sp 
   13 00000000         ; delta de la fila es fp +4    
   14 00000000         
   15 00000000                 AREA             codigo, CODE
   16 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
   17 00000000         
   18 00000000         
   19 00000000         conecta4_buscar_alineamiento_arm
   20 00000000 E92D47F0        STMDB            R13!, {R4-R10,R14}
   21 00000004 E1A04000        mov              r4, r0      ; r4 = tablero 
   22 00000008 E1A05001        mov              r5, r1      ; r5 = fila
   23 0000000C E1A06002        mov              r6, r2      ; r6 = columna 
   24 00000010 E1A07003        mov              r7, r3      ; r7 = color
   25 00000014         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   26 00000014         ; estan dentro del tablero 
   27 00000014 E3550001        cmp              r5, #1
   28 00000018 BA000017        blt              termina     ; salta si r5 >= 1 
                                                            
   29 0000001C E3550006        cmp              r5, #6
   30 00000020 CA000015        bgt              termina     ; salta si r4 > NUM
                                                            _FILAS
   31 00000024 E3560001        cmp              r6, #1
   32 00000028 BA000013        blt              termina     ; salta si r6 >= 1 
                                                            
   33 0000002C E3560007        cmp              r6, #7      ; salta si r6 <= NU
                                                            M_COLUMNAS 
   34 00000030 CA000011        bgt              termina
   35 00000034         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
   36 00000034 E084A185        add              r10, r4, r5, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
   37 00000038 E7DA9006        ldrb             r9, [r10, r6] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
   38 0000003C E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
   39 00000040 0A00000D        beq              termina     ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
   40 00000044 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d



ARM Macro Assembler    Page 2 


                                                            e la celda
   41 00000048 E15A0007        cmp              r10, r7     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
   42 0000004C 1A00000A        bne              termina     ; salta si no son i
                                                            guales
   43 00000050         ; obtenemos el valor de delta y lo avanzamos 
   44 00000050 E59D9020        ldr              r9, [sp, #32] ; r9 = deltaFila 
                                                            = sp + 12
   45 00000054 E0851009        add              r1, r5, r9  ; r5 = nueva_fila =
                                                             fila + delta_fila
   46 00000058 E59DA024        ldr              r10, [sp, #36] ; r10 = deltaCol
                                                            umna = sp + 8
   47 0000005C E086200A        add              r2, r6, r10 ; r6 = nueva_column
                                                            a = columna + delta
                                                            _columna
   48 00000060         ;llamamos a la función recursiva
   49 00000060 E3A08001        mov              r8, #1      ; apilamos en resul
                                                            tado un 1
   50 00000064 E92D0100        STMDB            R13!, {r8}
   51 00000068 E92D0600        STMDB            R13!, {r9, r10} ; apilamos los 
                                                            parámetros y el re
                                                            sultado para la sig
                                                            uiente iteración 
   52 0000006C EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
   53 00000070 E59D1008        ldr              r1, [sp, #8] ; leemos resultado
                                                             (1)
   54 00000074 E0800001        add              r0, r0, r1  ; r0 = resultado fi
                                                            nal = resultado ant
                                                            erior (r0) + result
                                                            ado de esta invocac
                                                            ion de la subrutina
                                                            (r1)
   55 00000078 E28DD00C        add              sp, sp, #12 ; liberamo el esaci
                                                            o de los parámetro
                                                            s apilados 
   56 0000007C         termina                              ; salimos de la sub
                                                            rutina 
   57 0000007C E8BD47F0        LDMIA            R13!, {R4-R10, R14}
   58 00000080                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec
ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 15 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 00000000

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 19 in file conecta4_2022_arm.s
   Uses
      At line 16 in file conecta4_2022_arm.s
      At line 52 in file conecta4_2022_arm.s

termina 0000007C

Symbol: termina
   Definitions
      At line 56 in file conecta4_2022_arm.s
   Uses
      At line 28 in file conecta4_2022_arm.s
      At line 30 in file conecta4_2022_arm.s
      At line 32 in file conecta4_2022_arm.s
      At line 34 in file conecta4_2022_arm.s
      At line 39 in file conecta4_2022_arm.s
      At line 42 in file conecta4_2022_arm.s

3 symbols
335 symbols in table
