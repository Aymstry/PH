


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************
    2 00000000         ; Autores: Ayelen Nu�o con NIA 799301 y Loreto Matiner
                       o con NIA 796598
    3 00000000         ;*******************************************************
                       ************
    4 00000000                 AREA             datos, DATA, READWRITE
    5 00000000 00 FF FF 
              01       deltas_fila
                               DCB              0x00, 0xFF, 0xFF, 0x01
    6 00000004 FF 00 FF 
              FF       deltas_columna
                               DCB              0xFF, 0x00, 0xFF, 0xFF
    7 00000008         
    8 00000008                 AREA             codigo, CODE
    9 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
   10 00000000                 EXPORT           conecta4_hay_linea_arm_c
   11 00000000                 IMPORT           conecta4_buscar_alineamiento_c
   12 00000000                 PRESERVE8        {TRUE}
   13 00000000                 ENTRY
   14 00000000         
   15 00000000         ; Parámetros que nos pasan a la función 
   16 00000000         ; r0 = tablero  
   17 00000000         ; r1 = fila 
   18 00000000         ; r2 = columna 
   19 00000000         ; r3 = color 
   20 00000000         
   21 00000000         conecta4_hay_linea_arm_c
   22 00000000         
   23 00000000 E92D5FF0        STMDB            R13!, {R4-R12, R14}
   24 00000004 E3A04000        mov              r4, #0      ; contador i del bu
                                                            cle for 
   25 00000008 E1A06000        mov              r6, r0      ; valor auxiliar de
                                                            l tablero
   26 0000000C E1A05001        mov              r5, r1      ; r5 = valor de la 
                                                            fila
   27 00000010 E1A08002        mov              r8, r2      ; r8 = valor de la 
                                                            columna 
   28 00000014 E1A0C003        mov              r12, r3     ; r12 = color
   29 00000018 E59F7128        LDR              r7, =deltas_fila 
                                                            ; r7 = @deltas_fila
                                                            
   30 0000001C         
   31 0000001C         for
   32 0000001C         ; actualizamos los deltas 
   33 0000001C E1D790D0        ldrsb            r9, [r7]    ; r9 = valor deltas
                                                            _fila
   34 00000020 E1D7A0D4        ldrsb            r10, [r7, #4] ; r10 = valor del
                                                            tas_columna; r8 = r
                                                            8 +1
   35 00000024 E2877001        add              r7, r7, #1  ; r7 = r7 +1
   36 00000028 E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
   37 0000002C         ; invocamos a la función para buscar en un sentido 
   38 0000002C EBFFFFFE        bl               conecta4_buscar_alineamiento_c
   39 00000030 E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
   40 00000034 E3500004        cmp              r0, #4      ; salta si r4 >= 4 



ARM Macro Assembler    Page 2 


                                                            
   41 00000038 AA000016        bge              continua
   42 0000003C         ; preparamos los parametros para la siguiente invocació
                       n 
   43 0000003C E3E0B000        mov              r11, #-1    ; r12 = -1 para act
                                                            ualizar los deltas
   44 00000040 E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
   45 00000044 E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
   46 00000048 E0411009        sub              r1, r1, r9  ; fila = fila - del
                                                            ta_fila 
   47 0000004C E042200A        sub              r2, r2, r10 ; columna = columna
                                                             - delta_columna 
   48 00000050 E009099B        mul              r9, r11, r9
   49 00000054 E00A0A9B        mul              r10, r11, r10
   50 00000058         ; devolvemos los parámetros a sus registros correspondi
                       entes
   51 00000058 E1A0B000        mov              r11, r0     ; resultado tempora
                                                            l en r11 
   52 0000005C E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
   53 00000060 E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
   54 00000064 E92D0600        STMDB            R13!, {r9,r10} ; apilamos los d
                                                            eltas
   55 00000068 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
   56 0000006C E08BB000        add              r11, r11, r0 ; guardamos en r11
                                                             el valor del resul
                                                            tado actualizado
   57 00000070 E28DD008        add              sp, sp, #8  ; liberamos los par
                                                            ámetros 
   58 00000074 E35B0004        cmp              r11, #4     ; salta si r4 >= 4 
                                                            
   59 00000078 AA000006        bge              continua
   60 0000007C         ; devolvemos a la normalidad los registros para la sigui
                       ente iteracion  
   61 0000007C E1A00006        mov              r0, r6      ; devolvemos el val
                                                            or a r0 (cuadricula
                                                            )
   62 00000080 E1A01005        mov              r1, r5      ; devolvemos el val
                                                            or a r1 (fila)
   63 00000084 E1A02008        mov              r2, r8      ; devolvemos el val
                                                            or a r2 (columna)
   64 00000088 E1A0300C        mov              r3, r12     ; devolvemos el val
                                                            or a r3 (color)
   65 0000008C         ; comprobamos si volvemos a saltar al bucle 
   66 0000008C E2844001        add              r4, r4, #1  ; incrementamos con
                                                            tador 
   67 00000090 E3540004        cmp              r4, #4      ; salta si r4 < 4 
   68 00000094 BAFFFFE0        blt              for
   69 00000098         ; salimos del bucle y terminamos la subrutina  
   70 00000098         
   71 00000098         continua
   72 00000098 E35B0004        cmp              r11, #4     ; Guardamos el resu
                                                            ltado en r0 para de
                                                            volverlo 
   73 0000009C A3A00001        movge            r0, #1



ARM Macro Assembler    Page 3 


   74 000000A0 B3A00000        movlt            r0, #0
   75 000000A4 E8BD5FF0        LDMIA            R13!, {R4-R12,R14}
   76 000000A8 E1A0F00E        mov              pc, r14
   77 000000AC         
   78 000000AC         ; Parámetros que nos pasan a la función 
   79 000000AC         ; r0 = tablero  
   80 000000AC         ; r1 = fila 
   81 000000AC         ; r2 = columna 
   82 000000AC         ; r3 = color 
   83 000000AC         
   84 000000AC         ; Faltan las deltas que se pasan siemPre a través de la
                        pila
   85 000000AC         ; delta de la columna es sp 
   86 000000AC         ; delta de la fila es fp +4 
   87 000000AC         
   88 000000AC         conecta4_buscar_alineamiento_arm
   89 000000AC E92D47F0        STMDB            R13!, {R4-R10,R14}
   90 000000B0 E1A04000        mov              r4, r0      ; r4 = tablero 
   91 000000B4 E1A05001        mov              r5, r1      ; r5 = fila
   92 000000B8 E1A06002        mov              r6, r2      ; r6 = columna 
   93 000000BC E1A07003        mov              r7, r3      ; r7 = color
   94 000000C0         ; comprobamos si son correctos los valores de la celda q
                       ue nos proporcionan
   95 000000C0         ; estan dentro del tablero 
   96 000000C0 E3550001        cmp              r5, #1
   97 000000C4 B3A00000        movlt            r0, #0
   98 000000C8 BA00001C        blt              termina     ; salta si r5 < 1 
   99 000000CC E3550006        cmp              r5, #6
  100 000000D0 C3A00000        movgt            r0, #0
  101 000000D4 CA000019        bgt              termina     ; salta si r5 > NUM
                                                            _FILAS
  102 000000D8 E3560001        cmp              r6, #1
  103 000000DC B3A00000        movlt            r0, #0
  104 000000E0 BA000016        blt              termina     ; salta si r6 < 1 
  105 000000E4 E3560007        cmp              r6, #7
  106 000000E8 C3A00000        movgt            r0, #0
  107 000000EC CA000013        bgt              termina     ; salta si r6 > NUM
                                                            _COLUMNAS 
  108 000000F0         ; comprobamos que la celda no sea vacia, y sea del mismo
                        color 
  109 000000F0 E084A185        add              r10, r4, r5, LSL #3 ; r10 = @ta
                                                            blero + 8*fila 
  110 000000F4 E7DA9006        ldrb             r9, [r10, r6] ; r9 = dato de la
                                                             celda = r10 + colu
                                                            mna 
  111 000000F8 E3190004        tst              r9, #0x4    ; and lógico que a
                                                            ctualiza los flags 
                                                            
  112 000000FC 03A00000        moveq            r0, #0
  113 00000100 0A00000E        beq              termina     ; salta si flag z =
                                                             1 pq la celda esta
                                                            rá vacia 
  114 00000104 E209A003        and              r10, r9, #0x03 ; and logico par
                                                            a encontrar color d
                                                            e la celda
  115 00000108 E15A0007        cmp              r10, r7     ; comparacion del c
                                                            olor obtenido con e
                                                            l guardado en r7
  116 0000010C 13A00000        movne            r0, #0



ARM Macro Assembler    Page 4 


  117 00000110 1A00000A        bne              termina     ; salta si no son i
                                                            guales
  118 00000114         ; obtenemos el valor de delta y lo avanzamos 
  119 00000114 E59D9020        ldr              r9, [sp, #32] ; r9 = deltaFila 
                                                            = sp + 12
  120 00000118 E0851009        add              r1, r5, r9  ; r5 = nueva_fila =
                                                             fila + delta_fila
  121 0000011C E59DA024        ldr              r10, [sp, #36] ; r10 = deltaCol
                                                            umna = sp + 8
  122 00000120 E086200A        add              r2, r6, r10 ; r6 = nueva_column
                                                            a = columna + delta
                                                            _columna
  123 00000124         ;llamamos a la función recursiva
  124 00000124 E3A08001        mov              r8, #1      ; apilamos en resul
                                                            tado un 1
  125 00000128 E92D0100        STMDB            R13!, {r8}
  126 0000012C E92D0600        STMDB            R13!, {r9, r10} ; apilamos los 
                                                            parámetros y el re
                                                            sultado para la sig
                                                            uiente iteración 
  127 00000130 EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
  128 00000134 E59D1008        ldr              r1, [sp, #8] ; leemos resultado
                                                             (1)
  129 00000138 E0800001        add              r0, r0, r1  ; r0 = resultado fi
                                                            nal = resultado ant
                                                            erior (r0) + result
                                                            ado de esta invocac
                                                            ion de la subrutina
                                                            (r1)
  130 0000013C E28DD00C        add              sp, sp, #12 ; liberamo el esaci
                                                            o de los parámetro
                                                            s apilados 
  131 00000140         termina                              ; salimos de la sub
                                                            rutina 
  132 00000140 E8BD47F0        LDMIA            R13!, {R4-R10, R14}
  133 00000144 E1A0F00E        mov              pc, r14
  134 00000148                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec
ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 4 in file conecta4_2022_arm.s
   Uses
      None
Comment: datos unused
deltas_columna 00000004

Symbol: deltas_columna
   Definitions
      At line 6 in file conecta4_2022_arm.s
   Uses
      None
Comment: deltas_columna unused
deltas_fila 00000000

Symbol: deltas_fila
   Definitions
      At line 5 in file conecta4_2022_arm.s
   Uses
      At line 29 in file conecta4_2022_arm.s
Comment: deltas_fila used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 8 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 000000AC

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 88 in file conecta4_2022_arm.s
   Uses
      At line 9 in file conecta4_2022_arm.s
      At line 127 in file conecta4_2022_arm.s

conecta4_hay_linea_arm_c 00000000

Symbol: conecta4_hay_linea_arm_c
   Definitions
      At line 21 in file conecta4_2022_arm.s
   Uses
      At line 10 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_c used once
continua 00000098

Symbol: continua
   Definitions
      At line 71 in file conecta4_2022_arm.s
   Uses
      At line 41 in file conecta4_2022_arm.s
      At line 59 in file conecta4_2022_arm.s

for 0000001C

Symbol: for
   Definitions
      At line 31 in file conecta4_2022_arm.s
   Uses
      At line 68 in file conecta4_2022_arm.s
Comment: for used once
termina 00000140

Symbol: termina
   Definitions
      At line 131 in file conecta4_2022_arm.s
   Uses
      At line 98 in file conecta4_2022_arm.s
      At line 101 in file conecta4_2022_arm.s
      At line 104 in file conecta4_2022_arm.s
      At line 107 in file conecta4_2022_arm.s
      At line 113 in file conecta4_2022_arm.s
      At line 117 in file conecta4_2022_arm.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

conecta4_buscar_alineamiento_c 00000000

Symbol: conecta4_buscar_alineamiento_c
   Definitions
      At line 11 in file conecta4_2022_arm.s
   Uses
      At line 38 in file conecta4_2022_arm.s
      At line 55 in file conecta4_2022_arm.s

1 symbol
344 symbols in table
